msgid ""
msgstr ""
"Project-Id-Version: Angular-CookBook\n"
"POT-Creation-Date: 2023-11-24T01:48:57Z\n"
"PO-Revision-Date: 2023-11-24 09:50+0000\n"
"Last-Translator: Esse Jacques  <essejacques@minawo-macbook-pro.local>\n"
"Language-Team: French <traduc@traduc.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: src/SUMMARY.md:1
msgid "Summary"
msgstr ""

#: src/SUMMARY.md:3
#: src/composent-without-selectors/how-to-create-component-without-selectors.md:5
msgid "Introduction"
msgstr ""

#: src/SUMMARY.md:5
msgid "Articles"
msgstr ""

#: src/SUMMARY.md:6 src/lazy-loading/lazy_loading.md:1
msgid "Lazy Loading"
msgstr "Chargement diff√©r√©"

#: src/SUMMARY.md:7 src/lazy-loading/lazy_loading_module.md:1
msgid "How to Lazy load Module ?"
msgstr "Comment charger diff√©r√© un module ?"

#: src/SUMMARY.md:8 src/lazy-loading/lazy_loading_standalone_component.md:1
msgid "How to Lazy load Standalone Components"
msgstr "Comment charger diff√©r√© un composant ?"

#: src/SUMMARY.md:9 src/lazy-loading/lazy_loading_service.md:1
msgid "How to Lazy load Service"
msgstr "Comment charger diff√©r√© un service ?"

#: src/SUMMARY.md:10
msgid "Preloading Strategy "
msgstr "Strat√©gie de pr√©chargement"

#: src/SUMMARY.md:11 src/interpolation/index.md:1
msgid "Interpolation"
msgstr "Interpolation"

#: src/SUMMARY.md:12 src/interpolation/how-to-bind.md:1
msgid "How to bind  ?"
msgstr "Comment lier ?"

#: src/SUMMARY.md:13
msgid "How to customize Component Interpolation"
msgstr "Comment personnaliser l'interpolation du composant ?"

#: src/SUMMARY.md:14
msgid "Renderer"
msgstr ""

#: src/SUMMARY.md:16 src/renderer/how-to-create_comment.md:1
msgid "How to create comment ?"
msgstr ""

#: src/SUMMARY.md:17 src/ng-template/index.md:1
msgid "How to use ng-template ?"
msgstr ""

#: src/SUMMARY.md:18
msgid "How to use ng-template with-ngIf ?"
msgstr ""

#: src/SUMMARY.md:19 src/ng-template/ng-template-outlet.md:1
msgid "How to use ngTemplateOutlet ?"
msgstr ""

#: src/SUMMARY.md:20 src/ng-template/ng-template-outlet-with-context.md:1
msgid "How to use ngTemplateOutlet with context ?"
msgstr ""

#: src/SUMMARY.md:21
msgid ""
"How to use ng-template with ViewChild/ViewChildren and ContentChild/"
"ContentChildren ?"
msgstr ""

#: src/SUMMARY.md:22
msgid "Component without selectors"
msgstr ""

#: src/SUMMARY.md:23
msgid "How to create component without selectors ?"
msgstr ""

#: src/SUMMARY.md:24 src/package-manager/index.md:1
msgid "Package manager"
msgstr ""

#: src/SUMMARY.md:25
msgid "How to specify packageManager ?( global + local )"
msgstr ""

#: src/SUMMARY.md:26
#: src/package-manager/how-to-force-specific-usage-of-packageManager-and-node-version.md:1
msgid ""
"How to force specific usage of packageManager and Node version ( package."
"json engines ) ?"
msgstr ""

#: src/SUMMARY.md:27 src/awesome-angular/awesome_angular.md:1
msgid "Awesome Angular"
msgstr ""

#: src/SUMMARY.md:31 src/contributors.md:1
msgid "Contributors"
msgstr ""

#: src/index.md:1
msgid "Angular CookBook"
msgstr ""

#: src/index.md:2
msgid "![Angular CookBook ](./introduction/book-cover.png)"
msgstr ""

#: src/index.md:4
msgid "Angular Cookbook - How to do things with Angular"
msgstr ""

#: src/index.md:6
msgid "This is a book about doing things with Angular."
msgstr ""

#: src/index.md:8
msgid "It takes the form of \"How to\" articles."
msgstr ""

#: src/index.md:10
msgid "Everyone can participate !"
msgstr ""

#: src/index.md:12
msgid "Source code is store on [Github]()"
msgstr ""

#: src/index.md:14
msgid ""
"Build with ‚ù§ by [Pierre N√©d√©lec](https://www.linkedin.com/in/pierrenedelec-"
"expert) "
msgstr ""

#: src/lazy-loading/lazy_loading.md:3
msgid "![Lazy Loading ](../images/lazy-loading.png)"
msgstr ""

#: src/lazy-loading/lazy_loading.md:6
msgid "[Lazy Loading Module](./lazy_loading_module.md)"
msgstr ""

#: src/lazy-loading/lazy_loading.md:8
msgid ""
"[Lazy Loading Standalone Components ( NG 14+) ](./"
"lazy_loading_standalone_component.md)"
msgstr ""

#: src/lazy-loading/lazy_loading.md:10
msgid "Read about [mdBook](mdBook.md)"
msgstr ""

#: src/lazy-loading/lazy_loading_module.md:14
msgid "Why/When to Lazy load Module ?"
msgstr ""

#: src/lazy-loading/lazy_loading_module.md:16
msgid ""
"You Application might contains differents features which are related to "
"specific part of your application. "
msgstr ""

#: src/lazy-loading/lazy_loading_module.md:19
msgid ""
"Lazy loading module help you to add features to your application without "
"having to increase runtime performance."
msgstr ""

#: src/lazy-loading/lazy_loading_module.md:21
msgid "Related Topics :"
msgstr ""

#: src/lazy-loading/lazy_loading_module.md:24
msgid "[Preloading Strategy ](./preloading_strategy.md)"
msgstr ""

#: src/lazy-loading/preloading_strategy.md:1
msgid "Preloading Strategy"
msgstr ""

#: src/interpolation/how-to-bind.md:4
msgid "{{myId}}"
msgstr ""

#: src/interpolation/how-to-customize-interpolation.md:1
msgid "How to customize Component Interpolation ?"
msgstr ""

#: src/interpolation/how-to-customize-interpolation.md:17
msgid ""
"```admonish note\n"
"If you need to display \"{{\" \"}}\" characters in template you can attach a "
"property to your component without customize interpolation\n"
"```"
msgstr ""

#: src/interpolation/how-to-customize-interpolation.md:21
msgid ""
"```admonish tldr\n"
"üòÜ Have fun with emoji customization [link](https://unicode.org/emoji/charts/"
"full-emoji-list.html)\n"
"```"
msgstr ""

#: src/interpolation/how-to-customize-interpolation.md:28
#: src/renderer/how-to-create_comment.md:27
#: src/ng-template/ng-template-with-ngIf.md:30
#: src/ng-template/ng-template-outlet.md:35
#: src/ng-template/ng-template-outlet-with-context.md:21
#: src/ng-template/ng-template-with-viewChild-contentChild.md:76
msgid "["
msgstr ""

#: src/interpolation/how-to-customize-interpolation.md:28
#: src/renderer/how-to-create_comment.md:27
#: src/ng-template/ng-template-with-ngIf.md:30
#: src/ng-template/ng-template-outlet.md:35
#: src/ng-template/ng-template-outlet-with-context.md:21
#: src/ng-template/ng-template-with-viewChild-contentChild.md:76
msgid "]()"
msgstr ""

#: src/renderer/index.md:1
msgid ""
"Renderer2 ![](https://img.shields.io/static/v1?"
"label=&message=CLASS&color=blue)"
msgstr ""

#: src/ng-template/index.md:2
msgid "Definitions"
msgstr ""

#: src/ng-template/index.md:3
msgid "ng-template"
msgstr ""

#: src/ng-template/index.md:4
msgid "The \\`"
msgstr ""

#: src/ng-template/index.md:4
msgid ""
" is an Angular element, which contains the template. A template is an HTML "
"snippet. The template does not render itself on DOM."
msgstr ""

#: src/ng-template/index.md:6
msgid "ng-template-outlet"
msgstr ""

#: src/ng-template/index.md:7
msgid ""
"The `ngTemplateOutlet` directive allows you to dynamically render templates "
"in your Angular components, which can be very useful for creating reusable "
"and flexible UI components."
msgstr ""

#: src/ng-template/index.md:9
msgid "ViewChild/ViewChildren and ContentChild/ContentChildren"
msgstr ""

#: src/ng-template/index.md:10
msgid ""
"`ViewChild` and `ViewChildren` are used to access the DOM elements or "
"directives from a component template. `ContentChild` and `ContentChildren` "
"are used to access the DOM elements or directives from the content of a "
"component."
msgstr ""

#: src/ng-template/index.md:13 src/package-manager/index.md:8
msgid "Table of contents"
msgstr ""

#: src/ng-template/index.md:14
msgid ""
"[How to use ng-template with ngIf directive ? ](./ng-template-with-ngIf.md)"
msgstr ""

#: src/ng-template/index.md:15
msgid "[How to use ngTemplateOutlet ?](./ng-template-outlet.md)"
msgstr ""

#: src/ng-template/index.md:16
msgid ""
"[How to use ngTemplateOutlet with context ?](./ng-template-outlet-with-"
"context.md)"
msgstr ""

#: src/ng-template/index.md:17
msgid ""
"[How to use ng-template with ViewChild/ViewChildren and ContentChild/"
"ContentChildren ?](./ng-template-with-viewChild-contentChild.md)"
msgstr ""

#: src/ng-template/ng-template-with-ngIf.md:1
msgid "The ng-template with ngIf directive"
msgstr ""

#: src/ng-template/ng-template-with-ngIf.md:17
msgid "or "
msgstr ""

#: src/ng-template/ng-template-with-ngIf.md:21
msgid "\"lessons-list\""
msgstr ""

#: src/ng-template/ng-template-outlet-with-context.md:8
msgid "\"name\""
msgstr ""

#: src/ng-template/ng-template-with-viewChild-contentChild.md:1
msgid ""
"ng-template with ViewChild/ViewChildren and ContentChild/ContentChildren ?"
msgstr ""

#: src/ng-template/ng-template-with-viewChild-contentChild.md:7
msgid "ViewChild and ViewChildren"
msgstr ""

#: src/ng-template/ng-template-with-viewChild-contentChild.md:26
msgid "`ViewChild` can be used to access the `HelloComponent` instance:"
msgstr ""

#: src/ng-template/ng-template-with-viewChild-contentChild.md:47
msgid ""
"In this example, `ViewChild` is used to get a reference to `HelloComponent` "
"and access its `name` property ."
msgstr ""

#: src/ng-template/ng-template-with-viewChild-contentChild.md:50
msgid "`ViewChildren` can be used in a similar way:"
msgstr ""

#: src/ng-template/ng-template-with-viewChild-contentChild.md:73
msgid ""
"In this case, `ViewChildren` returns a `QueryList` of `HelloComponent` "
"instances, and in `ngAfterViewInit`, we iterate over this list and log each "
"instance."
msgstr ""

#: src/ng-template/ng-template-with-viewChild-contentChild.md:78
msgid "ContentChild and ContentChildren"
msgstr ""

#: src/ng-template/ng-template-with-viewChild-contentChild.md:83
msgid "Here's an example of how to use `ContentChild`:"
msgstr ""

#: src/ng-template/ng-template-with-viewChild-contentChild.md:85
msgid ""
"```typescript\n"
"import { Component } from '@angular/core';\n"
"\n"
"@Component({\n"
"  selector: 'card',\n"
"  template: `\n"
"    <div class=\"card\">\n"
"      <ng-content select=\"header\"></ng-content>\n"
"      <ng-content select=\"content\"></ng-content>\n"
"      <ng-content select=\"footer\"></ng-content>\n"
"    </div> \n"
"  `,\n"
"  styles: [\n"
"    ` .card { min- width: 280px;  margin: 5px;  float:left  } \n"
"    `\n"
"  ]\n"
"})\n"
"export class CardComponent {\n"
"  @ContentChild('header') cardContentHeader: ElementRef;\n"
"}\n"
"```"
msgstr ""

#: src/ng-template/ng-template-with-viewChild-contentChild.md:106
msgid ""
"In this case, `ContentChild` is used to get a reference to the projected "
"`header` content."
msgstr ""

#: src/ng-template/ng-template-with-viewChild-contentChild.md:108
msgid ""
"`ContentChildren` can be used to get a list of projected content elements:"
msgstr ""

#: src/ng-template/ng-template-with-viewChild-contentChild.md:121
msgid ""
"In this example, `ContentChildren` is used to get a `QueryList` of projected "
"content elements with the template reference variable 'item'."
msgstr ""

#: src/ng-template/ng-template-with-viewChild-contentChild.md:123
msgid ""
"In conclusion, `ViewChild` and `ViewChildren` are used to access child "
"components and DOM elements directly added in the component's template. In "
"contrast, `ContentChild` and `ContentChildren` are used to access projected "
"content added in the component through `ng-content`."
msgstr ""

#: src/composent-without-selectors/index.md:1
msgid "Component Without Selectors"
msgstr ""

#: src/composent-without-selectors/index.md:3
msgid ""
"Creating components without selectors is an effective method for building "
"reusable components. Such components can be employed in various scenarios, "
"including:"
msgstr ""

#: src/composent-without-selectors/index.md:5
msgid ""
"**Route Components:** Navigate between different views in your application."
msgstr ""

#: src/composent-without-selectors/index.md:6
msgid ""
"**Dynamic Components:** Dynamically generate and insert components based on "
"user actions or application logic."
msgstr ""

#: src/composent-without-selectors/index.md:8
msgid ""
"This approach proves advantageous when aiming to minimize the overall build "
"size of your application. By omitting selectors, you streamline the "
"components for specific purposes without introducing unnecessary overhead."
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:1
msgid "Unleashing Angular's Power: Components Without Selectors"
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:3
msgid "Dive into Versatility and Efficiency"
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:6
msgid ""
"Embark on a transformative journey in Angular development by embracing the "
"art of crafting components without selectors. Join us as we explore the "
"unparalleled versatility of this approach, elevating the way you build "
"dynamic applications with seamless routes."
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:8
msgid "Project Overview"
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:10
msgid ""
"Before we dive into the technical details, let's take a quick look at the "
"project structure and its components."
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:12
msgid "Project Structure"
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:36
msgid "Before We Begin"
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:37
msgid ""
"To follow along, clone the project from [GitHub](https://github.com/"
"jdansomon/angular-Components-Without-Selectors.git) and set it up "
"effortlessly. Run `npm install` and switch to the `composent-with-selectors` "
"branch using `git checkout composent-with-selectors`."
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:39
msgid "Components with Selectors"
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:40
msgid ""
"Now that we're familiar with the project structure, let's explore components "
"with selectors, dissecting their impact on Webpack build size."
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:42
msgid ""
"**Webpack Build Size:** ![Webpack Build Size](./images/composent-with-"
"selectors.png)"
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:45
msgid ""
"**Results:** ![Webpack Build Size](./images/composent-with-selectors-result."
"png)"
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:48
msgid "Meet the dynamic duo: `app-root` and `app-home`."
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:49
msgid "`app-root` takes the lead as the root component."
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:50
msgid "Enter the welcoming realm of `app-home`."
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:52
msgid "Components Without Selectors"
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:53
msgid ""
"Now, with a clear understanding of the project structure, let's delve into "
"the revolutionary approach of creating components without selectors. Witness "
"the magic unfold as we explore Webpack build size dynamics."
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:55
msgid ""
"**Webpack Build Size:** ![Webpack Build Size](./images/component-without-"
"selectors.png)"
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:58
msgid "**Results:** ![Results](./images/component-without-result.png)"
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:61
msgid "The Sweet Spot: Why Components Without Selectors?"
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:62
msgid ""
"**Slimmer Build Size:** Experience a leaner application footprint, optimized "
"for seamless performance. "
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:64
msgid ""
"**Flexibility Unleashed:** Dive into the world of route navigation and "
"dynamic components with a flexible and dynamic architecture."
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:66
msgid "In Conclusion"
msgstr ""

#: src/composent-without-selectors/how-to-create-component-without-selectors.md:67
msgid ""
"This article has demystified the art of creating Angular components without "
"selectors. From the advantages of reduced build size to the enhanced "
"adaptability for dynamic components and routes, it's a game-changer in "
"Angular development. Elevate your projects with efficiency and versatility ‚Äì "
"welcome to the era of components without selectors!"
msgstr ""

#: src/package-manager/index.md:3
msgid ""
"The packageManager configuration is often associated with JavaScript or Node."
"js projects . The most common package managers for JavaScript is npm (Node "
"Package Manager) ."
msgstr ""

#: src/package-manager/index.md:5
msgid ""
"[Yarn](https://yarnpkg.com/en/) and [pnpm](https://pnpm.io/) are "
"alternatives to npm cli. You can check them out as well."
msgstr ""

#: src/package-manager/index.md:9
msgid ""
"[How to specify packageManager ? (global + local)](./how-to-specify-package-"
"manager.md)"
msgstr ""

#: src/package-manager/index.md:10
msgid ""
"[How to force specific usage of packageManager and Node version ( package."
"json engines ) ?](./how-to-force-specific-usage-of-packageManager-and-node-"
"version.md)"
msgstr ""

#: src/package-manager/how-to-specify-package-manager.md:1
msgid "How to specify packageManager ? (global + local)"
msgstr ""

#: src/package-manager/how-to-specify-package-manager.md:3
msgid "Global Configuration:"
msgstr ""

#: src/package-manager/how-to-specify-package-manager.md:5
msgid ""
"Global configuration typically refers to the default package manager that "
"will be used for all projects unless overridden locally."
msgstr ""

#: src/package-manager/how-to-specify-package-manager.md:8
msgid ""
"To set npm|pnpm|yarn as the default package manager globally, you can use "
"the following command:"
msgstr ""

#: src/package-manager/how-to-specify-package-manager.md:15
msgid "Local Configuration:"
msgstr ""

#: src/package-manager/how-to-specify-package-manager.md:17
msgid ""
"Local configuration is specific to a particular project and can override the "
"global configuration."
msgstr ""

#: src/package-manager/how-to-specify-package-manager.md:19
msgid ""
"In your project directory, create or edit the `.npmrc`\\| `.pnpmrc` | `."
"yarnrc` file and add the following line:"
msgstr ""

#: src/package-manager/how-to-specify-package-manager.md:25
msgid "Or, you can use the following command:"
msgstr ""

#: src/package-manager/how-to-specify-package-manager.md:31
msgid "Checking the Configuration:"
msgstr ""

#: src/package-manager/how-to-specify-package-manager.md:33
msgid ""
"You can check the current configuration by using the following commands:"
msgstr ""

#: src/awesome-angular/awesome_angular.md:2
msgid "![Awesome Angular](./awesome-angular.png)"
msgstr ""

#: src/contributors.md:3
msgid "[Pierre N√©d√©lec](https://www.linkedin.com/in/pierrenedelec-angular/) "
msgstr ""
